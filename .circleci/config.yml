# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
commands:
  print_pipeline_id:
    description: "A very simple command to print pipeline Id."
    parameters:
      my_param:
        type: string
        default: "xiaosha test param!!"
    steps:
      - run: echo << parameters.my_param >>
      - run: echo $CIRCLE_WORKFLOW_ID
jobs:
  fail_on_purpose_and_catch:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run: return 1 # make it fail
      - run:
          name: Print some error logs.
          command: echo "OH NO! ERRORS!"
          when: on_fail
  test_command:
    docker:
      - image: cimg/base:2020.01
    steps:
      - print_pipeline_id:
          my_param: "xing test param!!"
  save_file_to_workspace:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run: echo "Hello world! Hello Xiaosha!" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  read_file_from_workspace:
    docker:
      - image: cimg/base:2020.01
  #     - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt
      - run: ls /
  test_env_var:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run:
          name: "echo an env var that is part of my project"
          command: |
            echo $MY_ENV_VAR

# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  test_playground:
    # Run the welcome/run job in its own container
    jobs:
      - test_env_var
      - test_command
      - fail_on_purpose_and_catch
      - save_file_to_workspace
      - read_file_from_workspace:
          requires:
            - save_file_to_workspace